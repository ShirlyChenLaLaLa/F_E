{"remainingRequest":"/Users/yuhanchen/repos/F_E/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuhanchen/repos/F_E/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yuhanchen/repos/F_E/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/yuhanchen/repos/F_E/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/yuhanchen/repos/F_E/docs/reactNative/animation.md?vue&type=template&id=36e03fbb&","dependencies":[{"path":"/Users/yuhanchen/repos/F_E/docs/reactNative/animation.md","mtime":1547960430269},{"path":"/Users/yuhanchen/repos/F_E/node_modules/cache-loader/dist/cjs.js","mtime":1547801009313},{"path":"/Users/yuhanchen/repos/F_E/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1547801010156},{"path":"/Users/yuhanchen/repos/F_E/node_modules/cache-loader/dist/cjs.js","mtime":1547801009313},{"path":"/Users/yuhanchen/repos/F_E/node_modules/vue-loader/lib/index.js","mtime":1547801010156},{"path":"/Users/yuhanchen/repos/F_E/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1547801017119}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/dwqs/blog/issues/41\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"[译]详解React Native动画\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://future-challenger.gitbooks.io/react-native-animation/content/panresponder.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"React Native 详解\"),_c('OutboundLink')],1)])]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',[_vm._v(\"为了创建一个动画，我们首先要创建一个动画使用的值。一般可以这样做：\\nnew Animated.Value(0)\")]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"Animated 提供了两种类型的值：\")]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_c('p',[_vm._v(\"Animated 用于创建动画的主要方法：\")]),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('p',[_vm._v(\"Animated 实现组合动画的主要方式：\")]),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_c('p',[_vm._v(\"Animated 封装了四个可以动画化的组件：\")]),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_c('p',[_vm._v(\"插值函数：\\ninterpolate()：将输入值范围转换为输出值范围\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"react-native-动画（animated）\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#react-native-动画（animated）\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" React Native 动画（Animated）\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"创建动画值\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#创建动画值\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 创建动画值\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"动画值类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#动画值类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 动画值类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Animated.Value() 用于单个值。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.ValueXY() 用于矢量值。\\n创建一个Animated.ValueXY实例和Animated.Value基本上是一样的：new Animated.ValueXY({x: 0, y: 0})。只不过ValueXY一般用于处理组件的位置或是处理手势。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"创建动画的方法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#创建动画的方法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 创建动画的方法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Animated.timing()：最常用的动画类型，使一个值按照一个过渡曲线而随时间变化。（消耗类型的）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.spring()：弹簧效果，基础的单次弹跳物理模型实现的 spring 动画。使用spring可以定义一个只需要起始值和最终值的动画，不需要给出动画执行的时间。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.decay()：衰变效果，以一个初始的速度和一个衰减系数逐渐减慢变为0。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"实现组合动画\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#实现组合动画\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 实现组合动画\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Animated.parallel()：同时开始一个动画数组里的全部动画。默认情况下，如果有任何一个动画停止了，其余的也会被停止。可以通过stopTogether 选项设置为 false 来取消这种关联。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.sequence()：按顺序执行一个动画数组里的动画，等待一个完成后再执行下一个。如果当前的动画被中止，后面的动画则不会继续执行。使用sequence可以把多个动画组织起来，然他们依次顺序执行。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.stagger()：一个动画数组，传入一个时间参数来设置队列动画间的延迟，即在前一个动画开始之后，隔一段指定时间才开始执行下一个动画里面的动画，并不关心前一个动画是否已经完成，所以有可能会出现同时执行（重叠）的情况。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"可动画化的四个组件\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#可动画化的四个组件\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 可动画化的四个组件\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Animated.View\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.Text\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.Image\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.ScrollView\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"合成动画值\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#合成动画值\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 合成动画值\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Animated.add()\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.divide()\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.modulo()\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Animated.multiply()\\n可以使用加减乘除以及取余等运算来把两个动画值合成为一个新的动画值。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"插值函数\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#插值函数\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 插值函数\")])}]\n\nexport { render, staticRenderFns }"]}