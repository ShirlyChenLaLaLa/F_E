(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{176:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"函数防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数防抖","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数防抖")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("em",[t._v("函数防抖就是别人给了你一嘴巴子，还没来得及揉，又给了一嘴巴子。函数节流就是你时不时就捂着脸，别人难以下手。")])]),t._v(" "),a("h4",{attrs:{id:"函数防抖的原理："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数防抖的原理：","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数防抖的原理：")]),t._v(" "),a("p",[t._v("函数防抖：防抖动是将多次执行变为最后一次执行。当持续触发事件时，一定时间段内没有再触发事件，事件处理函数才会执行一次，如果设定的时间到来之前，又一次触发了事件，就重新开始延时。")]),t._v(" "),a("h4",{attrs:{id:"函数节流的实现代码："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数节流的实现代码：","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数节流的实现代码：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns a function, that, as long as it continues to be invoked, will not")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// be triggered. The function will be called after it stops being called for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// N milliseconds. If `immediate` is passed, trigger the function on the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// leading edge, instead of the trailing.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数去抖（连续事件触发结束后只触发一次）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sample 1: _.debounce(function(){}, 1000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连续事件结束后的 1000ms 后触发")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sample 1: _.debounce(function(){}, 1000, true)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连续事件触发后立即触发（此时会忽略第二个参数）")]),t._v("\n_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("debounce")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" immediate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("later")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定时器设置的回调 later 方法的触发时间，和连续事件触发的最后一次时间戳的间隔")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果间隔为 wait（或者刚好大于 wait），则触发事件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" last "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时间间隔 last 在 [0, wait) 中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还没到触发的点，则继续设置定时器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// last 值应该不会小于 0 吧？")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("last "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" wait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" last "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("later"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" last"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 到了可以触发的时间点")]),t._v("\n      timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以触发了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并且不是设置为立即触发的")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为如果是立即触发（callNow），也会进入这个回调中")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主要是为了将 timeout 值置为空，使之不影响下次连续事件的触发")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不是立即执行，随即执行 func 方法")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("immediate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 func 函数")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 timeout 一定是 null 了吧")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 感觉这个判断多余了")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 嗯，闭包返回的函数，是可以传入参数的")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以指定 this 指向")]),t._v("\n    context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次触发函数，更新时间戳")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// later 方法中取 last 值时用到该变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断距离上次触发事件是否已经过了 wait seconds 了")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即我们需要距离最后一次触发事件 wait seconds 后触发这个回调方法")]),t._v("\n    timestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立即触发需要满足两个条件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// immediate 参数为 true，并且 timeout 还没设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// immediate 参数为 true 是显而易见的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果去掉 !timeout 的条件，就会一直触发，而不是触发一次")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为第一次触发后已经设置了 timeout，所以根据 timeout 是否为空可以判断是否是首次触发")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" callNow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" immediate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 wait seconds 后触发 later 方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无论是否 callNow（如果是 callNow，也进入 later 方法，去 later 方法中判断是否执行相应回调函数）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在某一段的连续触发中，只会在第一次触发时进入这个 if 分支中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置了 timeout，所以以后不会进入这个 if 分支了")]),t._v("\n      timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("later"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是立即触发")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callNow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// func 可能是有返回值的")]),t._v("\n      result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解除引用")]),t._v("\n      context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"函数防抖的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数防抖的应用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数防抖的应用场景")]),t._v(" "),a("p",[t._v("对于函数防抖，有如下几个场景：")]),t._v(" "),a("ul",[a("li",[t._v("每次 resize/scroll 触发统计事件")]),t._v(" "),a("li",[t._v("文本输入的验证（连续输入文字后发送 AJAX 请求进行验证，验证一次就好）")])])])}],!1,null,null,null);e.options.__file="debounce.md";s.default=e.exports}}]);